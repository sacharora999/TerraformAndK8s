************************************************************************************************************************************
docker: Not healthy: "docker version --format {{.Server.Os}}-{{.Server.Version}}:{{.Server.Platform.Name}}" exit status 1: 
permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: 
Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.46/version": dial unix /var/run/docker.sock: connect: permission denied
************************************************************************************************************************************
sudo usermod -a -G docker $USER
newgrp docker

********************************************
Pass Environment Vars to running container 
********************************************
apiVersion: v1
kind: Pod
metadata:
  name: env-var
  labels:
    purpose: demonstrate-env-var
spec:
  containers:
  - name: env-var-container
    image: wordpress
    env:
    - name: WORDPRESS_VERSION
      value: "5.2.2"
    - name: WORDPRESS_USER
      value: "ubuntu"


********************************************
kubectl exec <pod name> -- printenv
kubectl exec env-var -- printenv
********************************************

********************************************
kubectl logs <pod name> 
Environment Vars + Volume Files = Downward API
********************************************


****************************************************************************************
Environment Variables in Kubernetes : Exposing Pod Information to Containers
****************************************************************************************

apiVersion: v1
kind: Pod
metadata:
  name: dapi-envars
spec:
  containers:
    - name: test-container
      image: registry.k8s.io/busybox
      command: [ "sh", "-c"]
      args:
      - while true; do
          echo -en '\n';
          printenv MY_NODE_NAME MY_POD_NAME MY_POD_NAMESPACE;
          printenv MY_POD_IP MY_POD_SERVICE_ACCOUNT;
          sleep 10;
        done;
      env:
        - name: MY_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
  restartPolicy: Never


********************************************************************************************************************************************************************************
Environment Variables in Kubernetes Part 3: Exposing Pod Information to Containers Through Files
********************************************************************************************************************************************************************************

apiVersion: v1
kind: Pod
metadata:
  name: downwardapi-volume
  labels:
    dapi: volume
    cluster: test-cluster
  annotations:
    color: red
spec:
  containers:
    - name: client-container
      image: registry.k8s.io/busybox
      command: ["sh", "-c"]
      args:
      - while true; do
          if [[ -e /etc/podlevelinfo/labels ]]; then
            echo -en '\n\n'; cat /etc/podlevelinfo/labels; fi;
          if [[ -e /etc/podlevelinfo/annotations ]]; then
            echo -en '\n\n'; cat /etc/podlevelinfo/annotations; fi;
          sleep 5;
        done;
      volumeMounts:
        - name: podlevelinfo
          mountPath: /etc/podlevelinfo
  volumes:
    - name: podlevelinfo
      downwardAPI:
        items:
          - path: "labels"
            fieldRef:
              fieldPath: metadata.labels
          - path: "annotations"
            fieldRef:
              fieldPath: metadata.annotations


********************************************
Delete and Recreate the POD
********************************************
kubectl replace --force -f filename.yaml
We can't move running pod from one node to another. Pod is just a running process (container) 


Selectors and Labels
********************************************
kubectl get pods --selector env=dev 
kubectl get pods --selector env=dev --no-headers | wc -l
********************************************



Taints and Tolerations
****************************************************************************************
kubectl taint node node-name key=value:taint-effect
taint-effect : NoSchedule PreferNoSchedule NoExecute


kubectl describe node kubemaster | grep Taint
****************************************************************************************
